;; Show opcode sequence, 2 gram

;; Usage:
;;   $ cat ../boot.bin | ../yalp -L ../boot.bin seq.yl | sort | uniq -c | sort -nr

(load "compiler/opcodes.yl")
(load "tools/code-walker.yl")

(def *optbl*
  (let1 h (table)
    (alet ((ls (load-opcodes))
           (i 0))
      (when ls
        (table-put! h i (car ls))
        (loop (cdr ls) (+ i 1))))
    h))

(def *next-table* (table))
(dolist (inst instructions)
  (table-put! *next-table* (car inst) (cadr inst)))

(defun get-next-code (code)
  (alet ((p (table-get *next-table* (car code)))
         (c (cdr code)))
    (if (pair? p)
        (if (eq? (car p) '$next)
            (car c)
          (loop (cdr p) (cdr c)))
      (if (eq? p '$next)
          c
        nil))))

(defun print-opcode-pairs (code)
  (vm-walker code
    (^(c recur)
      (awhen (get-next-code c)
        (print (list (table-get *optbl* (car c))
                     (table-get *optbl* (car it)))))
      nil)))

(defun main (args)
  (files-or-stdin args
                  (^(stream)
                    (awhile (read stream)
                      (print-opcode-pairs it)))))
