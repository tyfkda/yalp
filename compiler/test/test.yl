;; Test framework

(defmacro test-exec (name expected actual compare)
  `(do (format *stdout* "Testing %@ ... " ',name)
       (print-test-result ,expected ,actual ,compare)))

(defmacro test (name expected actual)
  `(test-exec ,name ,expected ,actual equal?))

(defmacro test-eq (name expected actual)
  `(test-exec ,name ,expected ,actual eq?))

(defun print-test-result (expected actual compare)
  (if (compare expected actual)
      (print "ok")
    (do
      (format *stdout* "FAILED: %@ expected, but %@\n" expected actual)
      (exit 1))))

(defun test-section (name)
  (format *stdout* "==== %@\n" name))

(defun test-complete ()
  (display "\x1b[1;32mSUCCESS\x1b[0;39m\n"))
