# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = /usr/local/gtest

# Where to find user code.
SRC_DIR = ../src
INC_DIR = ../include
OBJ_DIR = ../obj

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -I$(INC_DIR) -I$(SRC_DIR)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -Werror -DGTEST_USE_OWN_TR1_TUPLE=1 -std=c++0x -MMD

SRCS=$(wildcard $(SRCPATH)/*.cc)

DEPS:=$(SRCS:%.cc=%.d)

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = hash_table_test symbol_manager_test stream_test object_test read_test state_test util_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
	$(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all:	test

clean:
	rm -f $(TESTS) gtest.a gtest_main.a *.o *.d

-include $(DEPS)

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o:	$(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
	$(GTEST_DIR)/src/gtest-all.cc

gtest_main.o:	$(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
	$(GTEST_DIR)/src/gtest_main.cc

gtest.a:	gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a:	gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

#sample1.o:	$(OBJ_DIR)/sample1.cc $(OBJ_DIR)/sample1.h $(GTEST_HEADERS)
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(OBJ_DIR)/sample1.cc
#
#sample1_unittest.o:	$(OBJ_DIR)/sample1_unittest.cc \
#			$(OBJ_DIR)/sample1.h $(GTEST_HEADERS)
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(OBJ_DIR)/sample1_unittest.cc
#
#sample1_unittest:	sample1.o sample1_unittest.o gtest_main.a
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

test:	run-tests vm-test

RUN_TESTS = $(addprefix run-,$(TESTS))

run-tests:	$(RUN_TESTS)

hash_table_test:	hash_table_test.o $(OBJ_DIR)/allocator.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-hash_table_test:	hash_table_test
	./hash_table_test

symbol_manager_test:	symbol_manager_test.o $(OBJ_DIR)/symbol_manager.o $(OBJ_DIR)/allocator.o $(OBJ_DIR)/object.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/state.o $(OBJ_DIR)/util.o $(OBJ_DIR)/read.o $(OBJ_DIR)/vm.o $(OBJ_DIR)/basic.o $(OBJ_DIR)/binder.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-symbol_manager_test:	symbol_manager_test
	./symbol_manager_test

stream_test:	stream_test.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/allocator.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-stream_test:	stream_test
	./stream_test

object_test:	object_test.o $(OBJ_DIR)/object.o $(OBJ_DIR)/allocator.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/symbol_manager.o $(OBJ_DIR)/state.o $(OBJ_DIR)/util.o $(OBJ_DIR)/read.o $(OBJ_DIR)/vm.o $(OBJ_DIR)/basic.o $(OBJ_DIR)/binder.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-object_test:	object_test
	./object_test

read_test:	read_test.o $(OBJ_DIR)/read.o $(OBJ_DIR)/allocator.o $(OBJ_DIR)/symbol_manager.o $(OBJ_DIR)/object.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/state.o $(OBJ_DIR)/util.o $(OBJ_DIR)/vm.o $(OBJ_DIR)/basic.o $(OBJ_DIR)/binder.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-read_test:	read_test
	./read_test

state_test:	state_test.o $(OBJ_DIR)/state.o $(OBJ_DIR)/util.o $(OBJ_DIR)/allocator.o $(OBJ_DIR)/symbol_manager.o $(OBJ_DIR)/object.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/read.o $(OBJ_DIR)/vm.o $(OBJ_DIR)/basic.o $(OBJ_DIR)/binder.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-state_test:	state_test
	./state_test

util_test:	util_test.o $(OBJ_DIR)/util.o $(OBJ_DIR)/state.o $(OBJ_DIR)/allocator.o $(OBJ_DIR)/symbol_manager.o $(OBJ_DIR)/object.o $(OBJ_DIR)/stream.o $(OBJ_DIR)/read.o $(OBJ_DIR)/vm.o $(OBJ_DIR)/basic.o $(OBJ_DIR)/binder.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -o $@ $^
run-util_test:	util_test
	./util_test

vm-test:	yalp
	./vm_test.sh

yalp:
	make --director=..
